Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: var people = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];



b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

var people = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];
people.push("Mary")



c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

people.indexOf("Josh")



d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

var people = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];

people.indexOf("Emily");  //inputs -1 because name was not found



e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

var people = ["Vivian", "Ava", "Josh", "Patrick", "Mike", "Mary"];

people.splice(1,0, "Melissa");

console.log(people);



f) If Patrick wants to leave the line, how would you delete him from the array?

var people = ["Vivian", "Melissa", "Ava", "Josh", "Patrick", "Mike", "Mary"];

var deleted = people.splice(4,1);
console.log(people);


2. Provide another real-world example that you can model using a data structure.

Items in the online store using objects inside the array. 



3. How would your data structure allow developers to access and manipulate the data?

By using array functions, loops, for...in syntax, this.keyword and so on.